% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quickselect.R
\name{setNA}
\alias{setNA}
\title{Fill NA values using quickselect patterns to select the variables}
\usage{
setNA(x, pattern, replacement, force = FALSE)
}
\arguments{
\item{x}{A data.frame. Note that if a \code{data.table} is provided, the variables are changed in
place and nothing is returned. Otherwise the data frame will be returned.}

\item{pattern}{A character scalar representing patterns of variables to select.
This should be a comma separated list of patterns. Case is ignored. A pattern can be:
a) the full name of the variable, b) '^pat' selects variables starting with 'pat', c) '$pat' selects
variables ending with 'pat', d) '@regex' selects variables containing the regular expression 'regex',
e) a number giving the position of the variable (negative numbers start from the end), f) a special pattern:
'.' means all variables, '.num', '.log', '.lnum', '.char', '.fact', '.fchar', '.list', '.date' to select
the variables based on their types.
Patterns can be negated: start with a '!'. Two patterns can be logically combined with '&' or '|'.
Use a colon to create ranges, like in 'pat1:pat2'.}

\item{replacement}{A scalar that will fill the missing values. Note that if the replacement is
of type character but the data is not of type character, an error will be raised unless you
set the argument \code{force = TRUE} to convert the data to character before replacement.}

\item{force}{Logical scalar, default is \code{FALSE}. If the \code{replacement} is
of type character but the data is not of type character, an error will be raised unless
\code{force = TRUE} which will convert the data to character before replacement.}
}
\value{
If the data set in input is a \code{data.table}, the changes are in place and nothing is returned.
Otherwise, the data set is returned.
}
\description{
Fills variables from a data.frame containing misssing values.
The selection of the variables is done with \code{quickselect}.
}
\examples{

base = head(iris)
for(i in 1:5) base[i, i] = NA

# set NAs for all numeric values to 0
setNA(base, ".num", 0)

# set NAs of factor variables to "hmm"
setNA(base, ".fact", "hmm")

# set NAs of variables ending with "width" to -1
setNA(base, "$width", -1)

# replacing a numeric with a character raises an error
try(setNA(base, "petal..", "hmm"))

# same with forced conversion
setNA(base, "petal..", "hmm", TRUE)


}
\author{
Laurent Berge
}
